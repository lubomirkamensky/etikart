%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 8%%For: (V\222t\236zslav Volf) (ARTIQ, v.o.s.)%%Title: (Sagitta.ai)%%CreationDate: (8/25/06) (5:47 PM)%%BoundingBox: -59 -24 64 34%%HiResBoundingBox: -58.2109 -23.1992 63.4502 33.5098%%DocumentProcessColors:%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%DocumentCustomColors: (PANTONE 356 CVC)%%CMYKCustomColor: 1 0 0.91 0.27 (PANTONE 356 CVC)%%CMYKProcessColor: 1 1 1 1 ([Registra\213n\222])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 131071 -1%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 71 38.5 71 38.5%AI3_TileBox: 0 0 560 797%AI3_DocumentPreview: None%AI5_ArtSize: 612 792%AI5_RulerUnits: 1%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -506.5 441 1.1 1266 917 18 0 1 7 40 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%%AI3_PaperRect:-17 819 578 -23%%AI3_Margin:17 -22 -18 23%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI7_Thumbnail: 128 60 8%%BeginData: 7242 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD38FFAE5958FD0A0B2D5859AEFD6DFF58FD040B34348359848484%592DFD060B5884FD67FFA8340B0B0B5F84FD09FF34FD080B347DFD63FFA8%2D0B0B58A8FD0CFF340B0B050B0B59A8590B0B0B83FD60FF590B0B58FD0F%FF34FD050B7DFFFFFF83340B34A8FD5CFF830B0B34A8FD10FFA8FD050BAF%FD04FFA8830B0B59FD5AFF590B0B84FD13FFAE598383FD08FFAF2E0B2EFD%58FF2D0B2DA8FD22FF340B0BFD56FF2D0B2EFD25FF590B0BAFFD53FF580B%34FD27FF7D0B2DFD52FF590B34FD29FF580B2EFD23FF8484A8FD2AFF840B%0BFD2AFFA8050B34FD20FF830B83592D2DFD29FF2D0BFD2BFF2D0B0B0B84%FD1EFFAE2D840B347D5858FD27FF340B84FD2AFF58FD050BA8FD1DFF5883%5984590BFF0BFD26FF840B59FD0EFFAE83343434AEFD09FFA859580BA8FD%08FF58FD040B840B59FD1DFF58A8830B342EFF2EFD26FF0B0BA8FFFFFFA8%A8595983A8FD04FFA82D050B0B0B05A8FFFFFFA85958FD040B050B84FD07%FF2D0B050B0B0BFF340BA8FD1CFF58835959A80B830BFD25FF590B59FFAE%83FD080B34AE83FD070B34FFFFFFFD090BAEFD05FFAEFD070BFFA80B34FD%08FF83FD14FF2D8AA8FF835859FD24FFA80B0BAF580B0B3484FFFFAF2EFD%060B8383340B0B0B59FFFFFF592E2DFD060B83FD05FF58FD070B7DAE2E0B%A8FD06FF830BFD14FFAE2D342D3459FD25FF830B340B0B0B59FD06FF34FD%040B84FFFFAE340B34AEFD06FF83FD050B83FD08FF2EFD080B83FD06FF0B%0BFD16FFAEA8FD27FF2D0B050B0B34FD07FFAF05FD040BFD04FFA8A8FD08%FF34050B0B0B58FD08FF340B0B050B59592E0B0BFD05FF2E0B0BFD3EFFAE%FD050BA8FD08FF34FD040B83FD0DFF59FD040B83FD08FF59FD040BA8FFFF%580BA8FFFFFF580B0B0BFD3EFF83FD040B2DFD09FF7DFD040B34FD0DFF83%FD040B58FD08FF83FD040B59FFFFA80B59FFFF2DFD040BFD0AFFA859340B%0B0B342D83A8FD0AFF8359343458AFFF8484FD06FFA85858FD050B3459FD%07FF34FD040B83FD09FFA8FD050BFD0DFF59FD040B34FD08FF59FD040B83%FFFFFF342EFFFD0B0BA8FFFF84340B0B348359832E0B0B0B34FD08FF2D0B%0B59340B05340BA8FD04FFA8340B0B2D838484582E0B0B0BAEFD05FF2D05%0B0B0B83FD09FFA80B050B0B0BA8FD0CFFA80B0B050B2EFD08FF59050B0B%0B58FFFFFF2D0BA8A8830B0B0B05A884A883A8A8FF7D0B0B0B83FD05FF34%0B050B2EFD06FF2E0B2DFD04FF340B0BA8FD04FF340B0B7DFD06FF2D0B0B%2DFD05FFFD050BAEFD0AFFFD050BAEFD0CFFA8FD040B58FD08FF83FD040B%59FFFFFF830BAEFFFFFD040BFD07FF340B0B34FD07FF2D0B0B0BA8FD04FF%830B0BA8FD04FFA8340BA8FFFFFF830B0B0BFD07FF590B0B0B83FFFFFF84%FD050B84FD0AFFFD050B84FD0CFFA8FD040B2EFD08FFA8FD040B2DFFFFFF%830B83FFFFFD040BFD07FF0B0B0B83FD07FF830B0B0B83FD04FF590B0BA8%FD05FF830BA8FFFFFF830B0B34FD07FFAE0B0B0B59FFFFFF84FD050BA8FD%09FFAEFD050BFD0DFF84FD040B58FD08FFA8FD040B34FFFFFFA80B83FFFF%FD040BFD07FF830B58A8FD07FFA80B0B0B34FD04FF0B0B0583FD06FF0BA8%FD04FF2E347DFD07FF830B0B0B2DFFFFFF580B0B0B050B59FD09FF830B0B%0B052EFD0DFFA8050B0B0B2DFD08FFA80B0B050B2EFFFFFFA80B58FFFF0B%050B0BFD12FFAE0B0B0534FD04FF340B0B0B84FD05FFA8AEFD0FFF0B0B0B%58FFFFFF83FD050B58FD09FF5FFD040B59FD0DFFA8FD040B58FD08FFA8FD%040B58FD04FF0B83FFFFFD040BFD12FFA80B0B0B34FD04FF34FD040B58A8%FD13FFA80B0B0B2DFFFFFF590B58FD040BAFFD08FFFD050BFD0EFFA8FD04%0B2DFD08FFA8FD040B2EFD04FF0B58FFFFFD040BFD11FF7DFD040B34FD04%FF84FD060B58FD11FF832D0B0B0B34FFFFFF830BFF580B0B0B2EFD07FF34%FD040B83FD0EFFA8FD040B34FD08FF84FD040B58FD04FF0B83FFFFFD040B%FD0FFF8434FD050B2EFD05FF340B0B05FD040B83FD0CFFA8830B0B340B05%0B2EFFFFFF590BA8FF7D0B050B2EAFFFFFFFAF2E0B0B0B0559FD0FFFA80B%0B050B2EFD08FFA8050B0B0B2DFFFFFFA80B59FFFF0B0B0B05FD0DFF592D%0559A8A8050B0B34FD06FF34FD070B34A8FD09FF592D0B83FFFF0B0B0B58%FFFFFF830BAEFFFFA8340B0B0B343434FD050B83FD10FFA8FD040B58FD08%FFA8FD040B58FFFFFFAE0B83FFFFFD040BFD0BFF5F0B0B34FD04FF0B0B0B%34FD07FF83FD080BA8FD06FF830B0B2EAFFFFFAE0B0B0B2EFFFFFF830B84%FF2EFD040B342D342E342D5983FD12FFA8FD040B2EFD08FFA8FD040B2DFF%FFFF830B83FFFF340B0B0BFD09FF830B0B0B83FD05FF0B0B0B34FD09FF58%FD060B34FD04FFA8340B0B59FD04FFAE0B0B0B58FFFFFFAE0B590B0B2EA8%FD1CFF84FD040B58FD08FFA8FD040B34FFFFFF830BAEFFFF2E0B0B0BFD08%FF830B0B0B84FD06FF0B0B0B34FD0AFF83340B0B050B0BAFFFFFA80B050B%59FD05FF830B0B0B2DFFFFFFA80B0B0B05A8FD1DFF83050B0B0B2DFD08FF%A80B0B050B34FFFFFF340BA8FFFF34050B0BFD07FF830B050B59FD07FF0B%0B0534FD04FFAEFD07FF59FD040BA8FFFF2D0B0B2DFD06FFAE0B0B0B58FD%04FFFD050BA8FD1CFF59FD040B58FD08FFA8FD040B58FFFFFF340BFFFFFF%FD040BFD07FF340B0B0BAFFD07FF0B0B0B34FD04FF0BA8FD07FF340B0B0B%A8FFA80B0B0B83FD06FF840B0B0B2DFD04FF58FD050B2D2E8383A8FD17FF%83FD050BFD08FFA8FD050BFFFFFF0B58FFFFFF340B0B0BFD07FFFD040BAE%FD07FF0B0B0B34FD04FF0B59FD07FF590B0B0BA8FF590B0B0B59FD06FFA8%FD040BFD04FF7DFD0C0B585983A8FD11FF34FD050B83FD07FFAEFD050B34%A87D0B83FFFFFF340B0B0BA8FD05FFAEFD040B84FD06FF2EFD040BAEFFFF%A8050BA8FD06FF830B0B0BFFFF34050B0B34FD05FFAE2D0B050B0BAFFFA8%84AF050B0B0B050B0B0B050B0B0B05FD040B5983FD0CFFA8340B0B0B050B%0B2D7DA8FD06FF340B0B0B050B0B0B05FD04FF590B0B0558FD04FF2E5805%FD040BFD04FF84FD060B2DA8340B0B0B59FD06FF590B0B83FFFF34FD040B%A8FFFFFF830B2D340B0B0B2D340B34FF34FD130BAEFD08FF59FD0C0B58FD%06FF2EFD060B59FD04FFA8FD040B59FFFF340B8359FD050B5834340B58A8%AEFD060B340B0B0B58A8FFFFFF830B0B34FFFFFF84FD050B342E0B0B58AE%FFFD060B83FF7D0B3458FD110BA8FD07FF83FD0C0B2EFD07FF83592D340B%0B84FD05FF58FD070B58FFA834FD070B84FFFFFF59FD040B2EFF0B2E340B%2D58592E0B0B58FD05FF59FD070BA8FFFFFF84FD040B83FFFFFF0B0BAEFF%8359FD0F0BFD07FFA8AEA8FD15FFA80B2EFD07FF84580B0B0B5883FFFFFF%AE8334342E5983FD06FFAE598383FFFF0BA8FF842D0B050B3483FD07FF84%2E342E5883FD06FFAF7D83A8FD04FF830559FD04FFA88334340B0B050B0B%0B050B0B0B59FD1EFF580584FD4AFF340BAEFD08FFA88434FD060B34FD1D%FFAE0B34FD4BFF0B0B2DFD0BFF84FD060BFD1DFF2D0B84FD4AFF580B0B0B%59FD0BFF84FD050B84FD1BFF590B59FD4BFF0B0B0B050B83FD0BFF2E0B05%0B0BA8FD1AFF830B0BFD4CFFFD050B2DA8FD0AFF84FD040BA8FD19FFA82D%0BFD4DFFFD040B590B0BA8FD09FFA8FD040BA8FD18FFA80B0B83FD4DFF2D%0B0B0B84830B2DA8FD09FFFD040BFD18FFA82D0B84FD4EFF83050B0B59FF%590B0B83FD07FFA8FD040BFD17FF830B0B83FD50FF340B0B0BAEFF830B0B%83FD06FF830B0B0B83FD16FF590B0B84FD51FFA8FD040B59A8830B0B2EAF%FD04FFFD040BA8FD14FFAE2D0B0BAEFD53FFA834FD050B340B0B0B83AEFF%2E0B0B0B83FD14FF5F0B0B34FD56FFA8830B0B050B0B0B05FD070B58FD12%FFAF580B0B2D83FD5AFFA88459835983595FFD040B7DFD11FF83580B0B0B%83FD64FFAF58FD040B5983A8FD08FFA8A859580B0B0B2D7DFD69FF84342D%FD050B5834342E58FD050B3458AFFD6EFFA87D832E34FD050B34345983FD%38FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registra\213n\222]) 0 Xs([Registra\213n\222]) Pc1 0 0.91 0.27 (PANTONE 356 CVC) 0 x(PANTONE 356 CVC) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Path Blends) (Z\207suvn\371 modul Adobe Prolnut\222) (\353iv\207 prolnut\222)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Zp\236t nov\207 kaligrafick\207 stopa) (N\207stroj kaligrafick\371 \344t\236tec)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Z\207suvn\371 modul Adobe Stopy \344t\236tce se vzorkem) (N\207stroj objektov\371 \344t\236tec)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Z\207suvn\371 modul Adobe Objektov\216 stopy \344t\236tce) (N\207stroj objektov\371 \344t\236tec)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Z\207suvn\371 modul Adobe Rozs\216vac\222 stopy \344t\236tce) (N\207stroj rozs\216vac\222 \344t\236tec)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 100 Lb(Vrstva 1) Ln0 A*u0 O1 0 0.91 0.27 (PANTONE 356 CVC) 0 x800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR63.1978 21.127 m63.3008 20.752 63.3506 20.373 63.4253 19.9209 C63.3999 18.7129 62.7705 17.457 61.7656 16.9023 C61.2617 16.8281 61.0859 16.3975 60.583 16.4238 C59.251 16.1221 57.9419 16.6514 57.1631 17.6064 C56.7603 17.959 56.6099 18.4609 56.3833 18.8877 C56.1309 20.0205 56.3066 21.3271 57.1631 22.1582 C58.0933 23.1641 59.4004 23.4922 60.8599 23.1885 C61.8652 22.9131 62.7705 22.1328 63.1978 21.127 Cf1 D60.6333 22.7383 m59.5776 22.9639 58.3447 22.8135 57.6406 21.957 C56.8853 21.1025 56.709 19.8428 57.063 18.8398 C57.3887 17.9346 58.1929 17.0781 59.251 16.9258 C60.3833 16.7012 61.4878 17.1777 62.167 17.959 C62.3188 18.1592 62.4707 18.4121 62.645 18.5615 C62.6968 18.9639 62.9473 19.2666 62.8467 19.6182 C63.0234 20.1211 62.7969 20.6748 62.6968 21.0527 C62.3188 21.8838 61.5132 22.4365 60.6333 22.7383 Cf*U*u0 D61.2617 21.5283 m61.3862 21.1533 61.5635 20.7275 61.3623 20.4229 C61.4385 20.0703 60.6084 20.0205 61.1616 19.7451 C61.7148 19.292 61.1357 18.4121 61.7148 17.959 C61.5132 17.8828 61.1357 17.9082 60.8848 17.9834 C60.709 18.5615 61.1357 19.2178 60.5088 19.4932 C58.9731 19.5693 L58.7725 19.1162 58.9731 18.4609 58.9233 17.9346 C58.7461 17.959 58.5708 17.8584 58.3696 17.9082 C58.1929 18.1084 58.4697 18.3359 58.3696 18.5371 C58.2192 19.5693 58.4204 20.8008 58.3198 21.833 C58.4951 22.0078 59.0234 21.8574 59.3755 21.957 C60.0303 21.8574 60.835 22.083 61.2617 21.5283 Cf58.998 21.4287 m58.9233 21.3535 L58.8721 20.9512 58.8721 20.5723 58.9233 20.1729 C59.4507 20.1465 60.2056 20.0703 60.7349 20.3486 C60.7593 20.5225 60.835 20.7002 60.8091 20.9023 C60.583 21.707 59.5776 21.2275 58.998 21.4287 Cf*U37.6191 17.8086 m37.644 17.2031 37.5679 16.625 37.6689 16.0225 C37.5439 15.4932 37.7456 14.9912 37.5938 14.4629 C37.7192 13.9336 37.644 13.1797 37.6689 12.5762 C39.1279 12.501 40.9395 12.5273 42.5986 12.5273 C42.4985 12.2227 42.5239 11.8467 42.5493 11.5459 C37.6938 11.4932 L37.5181 6.666 37.8701 2.4902 37.7456 -2.1377 C37.8462 -2.6904 37.896 -3.1689 37.9966 -3.749 C38.2236 -4.6035 38.8516 -5.2324 39.6802 -5.5586 C41.3413 -5.9854 42.5986 -4.7031 43.3789 -3.5205 C43.6558 -3.6729 43.8813 -3.8232 44.1587 -4.0234 C43.7061 -4.9805 43.1016 -6.0635 42.0215 -6.5645 C40.2344 -7.5205 37.5679 -7.4199 35.9082 -6.2627 C33.4185 -4.1758 34.5254 -0.5283 34.1733 2.3135 C34.2734 2.4648 34.1235 2.6152 34.2231 2.7666 C33.998 3.0684 34.3491 3.2949 34.1733 3.5977 C34.2476 3.6709 L34.1733 3.8477 34.2476 4.0996 34.1733 4.3018 C34.2476 4.5273 34.1479 4.9063 34.1733 5.1807 C34.1733 5.71 34.1987 6.2129 34.1479 6.7646 C34.2231 8.2246 34.0977 9.6318 34.1733 11.1924 C34.2734 11.3682 34.0977 11.5957 33.9214 11.4932 C31.9849 11.4678 L31.8345 11.5957 31.8579 11.7715 31.8838 11.9727 C33.4937 13.0527 35.23 14.4883 36.3359 16.1221 C36.6128 16.6758 36.8384 17.2549 37.1655 17.8086 C37.3174 17.9082 37.4937 17.7559 37.6191 17.8086 Cf-47.5718 12.376 m-47.4712 10.4375 -47.6221 8.5029 -47.4956 6.6914 C-47.748 6.5146 -47.999 6.5908 -48.2505 6.6162 C-48.9297 8.4766 -49.6084 10.4375 -51.6206 11.0908 C-52.6523 11.4189 -53.8096 11.2422 -54.5137 10.5117 C-54.7651 10.3369 -54.9907 10.0859 -55.1426 9.835 C-55.4688 9.1543 -55.7461 8.25 -55.2686 7.5205 C-54.1611 5.7354 -52.1499 4.9805 -50.2632 3.998 C-48.3003 2.8418 -46.0117 1.5107 -45.7607 -0.9805 C-45.5854 -2.1377 -45.7358 -3.4697 -46.2378 -4.5039 C-47.3452 -6.6406 -49.332 -8.0996 -51.9229 -8.25 C-53.6831 -8.2764 -55.3438 -7.5205 -56.5762 -6.5645 C-56.752 -6.6406 L-56.9028 -7.1436 -57.1797 -7.5967 -57.3311 -8.0996 C-57.6328 -8.0488 -57.9092 -8.1982 -58.1865 -8.0996 C-58.2354 -5.8594 -58.2109 -3.749 -58.2109 -1.5586 C-57.9595 -1.5586 -57.6328 -1.4355 -57.356 -1.5586 C-56.9028 -3.8994 -55.5947 -6.4404 -52.979 -6.8916 C-51.4956 -7.0684 -49.936 -6.5381 -49.1558 -5.3584 C-48.7529 -4.5283 -48.6782 -3.3203 -48.98 -2.4639 C-51.1426 1.0313 -56.1489 0.9824 -57.6831 5.0557 C-57.9092 5.5576 -57.9092 6.3125 -58.0352 6.8906 C-57.8594 7.0928 -57.9844 7.4707 -57.9092 7.7461 C-57.7583 8.5283 -57.5068 9.2324 -57.1289 9.8857 C-56.1982 11.5703 -54.061 12.5762 -51.9731 12.248 C-50.8662 12.0215 -49.8101 11.6455 -48.8291 11.0664 C-48.7529 11.0908 L-48.3506 11.4932 -48.3506 12.5762 -47.5718 12.376 Cf*u58.3696 11.0908 m58.6455 10.6152 58.8984 10.0361 58.998 9.5078 C59.2754 9.0557 59.1504 8.4004 59.2754 7.9219 C59.2754 6.916 59.251 6.085 59.3516 5.2305 C59.1997 4.1758 59.3516 3.2188 59.2998 2.0869 C59.3247 0.7549 59.3755 -0.7295 59.3755 -2.1133 C59.5518 -2.2139 59.4004 -2.3623 59.4004 -2.5146 C59.4766 -3.2695 59.728 -4.126 60.4077 -4.4521 C61.3862 -4.7295 62.167 -4.0488 62.7456 -3.4453 C62.9722 -3.7236 63.728 -3.749 63.4502 -4.2012 C62.6201 -5.6846 61.3125 -6.918 59.5015 -6.8672 C57.7651 -6.79 56.709 -5.2578 56.2573 -3.873 C56.1572 -3.7998 L53.6416 -5.6104 50.5215 -7.9746 46.8994 -6.79 C45.7939 -6.3379 44.9131 -5.333 44.6113 -4.25 C44.3838 -3.5723 44.4092 -2.9951 44.3838 -2.3623 C44.4604 -1.9121 44.6616 -1.6104 44.7373 -1.1836 C46.4971 2.4404 50.9751 3.2949 54.3208 5.0303 C54.9487 5.3818 55.5522 5.6865 55.8789 6.4131 C55.8052 6.54 55.9307 6.7646 55.8789 6.916 C55.7539 7.9727 55.8545 9.1055 55.3525 10.1621 C55.1499 10.9668 54.5215 11.6201 53.7422 11.9727 C52.2065 12.4512 50.8745 12.4004 49.3652 11.9971 C47.8057 11.5195 47.7549 9.8086 47.4287 8.4502 C47.3271 8.4004 47.2773 8.2002 47.1519 8.1475 C46.6489 7.7715 45.9194 7.7715 45.3667 8.0205 C44.939 8.25 44.7124 8.6016 44.561 9.1055 C44.4351 10.4873 45.2915 11.5957 46.4468 12.1475 C49.5171 13.6572 54.3691 13.8574 57.3628 12.1475 C58.3696 11.0908 Lf1 D55.7036 4.6016 m54.8989 4.2764 54.0684 3.9492 53.2642 3.5713 C51.0747 2.3906 47.9312 0.7803 48.209 -2.2656 C48.3848 -3.4697 49.0889 -4.4775 50.1694 -4.9053 C52.4097 -5.4082 54.2441 -3.9502 55.8545 -2.6904 C55.8545 0.5771 L55.8301 1.3818 55.8301 2.2129 55.8545 2.9668 C55.5781 3.1182 56.0308 3.2695 55.8052 3.4443 C55.9053 3.7725 55.8301 4.2012 55.8545 4.5762 C55.7036 4.6016 Lf*U*u0 D-30.543 10.9922 m-30.4683 10.8662 -30.4185 10.7412 -30.2666 10.6152 C-29.0088 9.1543 -29.0591 6.8906 -29.0591 4.9307 C-29.1611 3.6709 -28.9834 2.2871 -29.0591 1.0313 C-29.0088 -0.8047 -29.1348 -2.2656 -28.7827 -4.1758 C-28.7319 -4.6035 -28.3809 -4.9316 -28.0029 -5.1553 C-27.0732 -5.4326 -26.3682 -4.7793 -25.8657 -4.2256 C-25.4883 -4.2256 -25.3618 -4.6035 -25.0352 -4.6787 C-25.6636 -5.9854 -26.6196 -7.2959 -28.1538 -7.5967 C-29.2358 -7.7988 -30.292 -7.3457 -31.0469 -6.6152 C-31.5493 -6.0635 -31.9263 -5.3838 -32.1533 -4.6523 C-32.6567 -4.7295 -32.9331 -5.1807 -33.3359 -5.4326 C-35.3467 -6.9688 -38.0894 -8.5283 -40.8052 -7.8232 C-42.2651 -7.4199 -43.3721 -6.0361 -43.6729 -4.6035 C-43.8491 -3.6982 -43.6729 -2.3623 -42.9941 -1.5332 C-42.3398 -0.2529 -40.981 0.7041 -39.7241 1.458 C-37.7114 2.5146 -35.7246 3.3701 -33.6865 4.3271 C-33.3096 4.7539 -32.7314 4.9307 -32.5059 5.5068 C-32.4546 6.54 -32.5811 7.6963 -32.7563 8.6768 C-32.6821 8.7529 L-32.9839 9.708 -33.4365 10.8174 -34.4668 11.2178 C-36.1523 11.6455 -38.0142 11.6709 -39.4727 10.7412 C-40.5044 9.8857 -40.1763 8.5283 -40.6797 7.4707 C-41.2329 6.9424 -41.9873 6.8652 -42.7173 7.1426 C-43.3198 7.3965 -43.4722 8.123 -43.4473 8.7773 C-43.2695 8.8271 -43.4224 8.9785 -43.4224 9.0811 C-42.4404 11.8711 -39.1963 12.2734 -36.5039 12.5762 C-34.291 12.5762 -32.0527 12.4268 -30.543 10.9922 Cf1 D-32.5308 3.8477 m-32.6821 3.8477 L-33.5107 3.2695 -34.5176 3.043 -35.4238 2.5146 C-37.2593 1.3818 -39.6489 0 -39.9253 -2.5146 C-39.9253 -3.6729 -39.4473 -4.8047 -38.5171 -5.459 C-36.3291 -6.5889 -34.0889 -4.8047 -32.5811 -3.4941 C-32.5308 3.8477 Lf*U0 D12.2153 20.1465 m12.0391 19.6426 12.2666 19.04 12.2407 18.5117 C12.2905 17.0029 12.5166 15.7461 12.5166 14.2363 C12.8442 9.1807 12.7432 3.2451 12.7183 -1.7598 C12.7183 -2.4141 12.8696 -3.3447 13.4219 -3.8232 C14.3027 -4.4023 15.4346 -4.5039 16.4663 -4.5537 C16.5415 -5.1045 16.3149 -5.6846 16.4663 -6.1885 C12.1646 -6.2627 8.5181 -6.4404 4.2412 -6.415 C4.1411 -6.2891 L4.166 -4.6523 L5.499 -4.4521 7.3364 -4.6035 7.7881 -3.1191 C8.1411 -2.0889 7.9888 -0.5283 8.1665 0.3027 C8.1411 3.7725 8.1411 7.3711 8.1665 10.916 C8.0654 11.0664 8.2163 11.1924 8.0913 11.3682 C8.0391 12.6777 8.1411 14.0361 7.6631 15.293 C7.0332 16.8018 5.3491 16.8281 3.7891 16.9023 C3.6133 17.3037 3.814 17.6826 3.6885 18.1338 C3.7891 18.3623 L6.6064 18.9131 9.4487 19.4932 12.1392 20.1982 C12.2153 20.1465 Lf*u1 D31.3052 9.2813 m31.0801 11.168 30.7275 12.8018 30.0728 14.4883 C29.9727 14.7891 29.9229 15.1152 29.7705 15.418 C29.4951 16.2979 28.9678 17.0527 28.7402 17.9082 C28.438 18.3105 28.3628 18.7627 28.0864 19.1162 C25.7476 23.417 22.2002 26.9893 17.9502 29.6299 c10.9829 33.6797 1.6006 35.0625 -6.2466 32.0439 c-10.2456 30.459 -14.3955 28.2188 -17.2632 25.0273 c-19.4004 22.5625 -21.186 20.2471 -22.7212 17.2793 C-22.8218 16.9258 -22.9731 16.5752 -23.1743 16.2979 C-23.3252 15.4424 -23.9023 14.5381 -24.0791 13.6064 C-24.231 13.3574 -24.231 13.0527 -24.356 12.8018 C-24.457 12.2227 -24.6587 11.6709 -24.708 11.1416 C-24.9092 10.9922 -24.6831 10.6387 -24.8843 10.4629 C-25.689 5.7607 -25.4629 0.6025 -24.0542 -3.8232 c-23.5264 -5.3076 -23.0737 -6.7148 -22.1924 -7.9482 C-22.0415 -8.4258 -21.6904 -8.8037 -21.5391 -9.3057 C-21.9165 -9.6592 -22.1924 -9.96 -22.4194 -10.4648 C-23.375 -12.3506 -22.9224 -14.9404 -21.7158 -16.5254 C-19.4258 -20.0713 -14.4961 -20.5752 -10.3721 -19.9453 C-4.2095 -23.5928 4.3921 -24.2715 11.3838 -22.0596 c16.9194 -20.3223 21.7227 -17.1299 25.3198 -12.7012 C26.7534 -10.665 28.3379 -8.502 29.2173 -6.0635 C30.0234 -4.4775 30.5249 -2.7168 30.9536 -0.8799 C31.6084 2.4648 31.8579 5.9863 31.3052 9.2813 Cf0 D25.2695 20.9512 m25.3198 21.0283 L26.3755 19.5693 27.2808 17.8086 28.0361 16.1973 C27.4072 16.1475 26.7788 16.5518 26.1255 16.5752 C25.395 16.7266 L25.0928 18.1338 25.4453 19.4932 25.2695 20.9512 Cf-23.5264 -0.2012 m-23.8032 0.25 -23.627 0.8057 -23.8032 1.2334 C-24.0034 2.9668 -24.1802 4.7773 -24.0034 6.3623 C-23.9277 6.3623 L-23.0225 4.4268 -20.9355 3.3701 -19.0229 2.5391 C-19.0229 2.4902 L-20.8599 2.2637 -22.7212 1.3818 -23.5264 -0.2012 Cf-9.8428 12.2734 m-9.5669 10.6152 -9.6421 9.0049 -9.918 7.1934 C-10.3203 5.6865 -11.0249 4.0996 -12.5356 3.2949 C-13.8931 2.4404 -16.2827 2.5391 -17.6401 3.4443 C-18.7725 4.375 -19.4756 5.3818 -19.729 6.8164 C-19.9038 6.8906 -19.729 7.1162 -19.8784 7.2188 C-20.4829 9.4063 -20.1309 11.9727 -19.2251 14.0107 c-18.521 15.7207 -17.1372 16.9023 -15.4019 17.4316 C-13.5151 17.9346 -11.4023 17.0283 -10.7236 15.1934 C-10.4971 14.7393 -10.2456 14.2861 -10.2197 13.7832 C-10.0942 13.6572 -10.1201 13.4063 -9.9946 13.2568 C-10.0688 12.8262 -9.8428 12.6523 -9.8428 12.2734 Cf-19.0737 -15.292 m-19.3511 -14.4639 -19.6279 -13.3301 -19.3003 -12.4746 C-17.5405 -14.7646 -15.5532 -16.7266 -13.062 -18.3857 C-15.3257 -18.1855 -18.0186 -17.5059 -19.0737 -15.292 Cf-8.4097 -19.1406 m-8.8623 -19.3154 -9.3149 -18.8643 -9.7173 -18.7139 C-14.3701 -16.3252 -18.0679 -12.5498 -20.709 -7.8984 C-20.7593 -7.5713 -20.9858 -7.3945 -21.0864 -7.1182 C-21.3125 -6.8154 -21.4385 -6.4893 -21.5635 -6.1377 C-21.7651 -5.835 -22.0415 -5.459 -21.9907 -5.0791 C-18.0933 -7.6709 -13.1128 -7.5967 -8.7363 -9.0283 C-6.5991 -10.1865 -5.6685 -12.9033 -5.8945 -15.292 C-6.2466 -16.8252 -7.127 -18.2861 -8.4097 -19.1406 Cf26.4771 -8.6016 m22.5781 -15.4189 15.3345 -20.2471 7.2358 -21.6299 c2.6064 -22.3848 -2.2227 -21.8818 -6.3213 -20.3223 C-6.3975 -20.2471 L-3.2271 -19.0166 -2.1968 -15.7451 -1.9702 -12.501 c-1.8945 -11.5703 -2.1216 -10.9912 -2.1216 -10.1602 C-2.4487 -8.1982 -3.3286 -6.2129 -5.0898 -4.9805 C-9.4902 -2.7168 -14.6982 -2.9951 -19.5264 -1.7109 C-20.1309 -1.46 -20.8599 -1.1836 -21.0864 -0.5781 C-21.1611 -0.1768 -21.0864 0.25 -20.8345 0.5273 C-19.4512 1.4844 -17.6157 1.4082 -15.9053 1.4844 c-13.1128 1.585 -10.0942 1.3076 -7.9575 3.1182 C-6.8745 4.1758 L-6.6992 4.4268 -6.498 4.6777 -6.3213 4.9307 C-4.4102 7.873 -4.4858 12.1973 -6.272 15.2178 C-6.9507 16.0479 L-6.0698 16.5518 -5.1646 17.7803 -4.0073 17.0029 c-3.0522 16.373 -2.373 15.0166 -0.9146 15.4424 C-0.1094 15.5938 0.2427 16.373 0.3931 17.0781 C0.3184 18.1084 -0.084 19.0137 -1.0142 19.4678 C-2.1216 20.0967 -3.7573 20.0459 -4.8882 19.3428 c-5.9448 18.6875 -6.9004 17.9346 -7.8813 17.1289 C-8.1577 17.1523 -8.4097 17.5313 -8.687 17.6064 C-11.5283 18.9395 -15.3257 18.8623 -18.1685 17.5313 c-19.5532 16.9023 -20.7593 16.2227 -21.9663 15.293 C-22.0415 15.293 L-21.9907 15.7715 -21.5889 16.1973 -21.4385 16.7012 c-21.2622 17.3545 -20.709 17.9082 -20.457 18.5117 C-20.457 18.7129 -20.2305 18.7891 -20.1812 19.0137 C-17.7153 23.291 -13.9932 26.8379 -9.4902 29.1514 C-5.0146 31.6924 0.2935 32.7734 5.8506 32.1924 C5.6011 31.3643 5.4492 30.3584 5.7266 29.5039 C5.9517 28.4727 6.7568 27.6924 7.7637 27.3916 C8.6938 27.1885 9.8755 27.0625 10.606 27.7188 c11.5112 28.498 11.687 29.8545 11.6377 30.9639 C16.4912 29.5537 20.667 26.6865 23.8354 22.8623 C23.3579 22.083 22.7803 21.4033 22.25 20.7764 C21.0186 19.4414 19.7104 18.3359 18.1011 17.3809 C18.127 17.2031 18.1514 17.0029 18.2017 16.8018 C18.5293 16.7012 L21.0938 16.3232 L21.1191 15.9727 21.145 15.6445 21.0938 15.293 C21.1943 14.9414 21.1699 14.5137 21.1943 14.1602 C21.4209 12.626 21.2451 10.8906 21.5225 9.4063 C21.3701 8.7275 21.5469 8.0479 21.5225 7.293 C21.5972 4.3018 21.3701 1.7607 21.4209 -1.2832 C21.5225 -2.9951 22.125 -4.8789 23.8853 -5.583 c25.0425 -6.0879 26.6777 -6.0635 27.8599 -5.835 C27.5581 -6.8154 26.9292 -7.6709 26.4771 -8.6016 Cf30.1235 3.2188 m30.0728 1.8613 29.8472 0.5273 29.5698 -0.7793 c29.3179 -1.8623 29.1172 -2.6904 28.6909 -3.8232 C27.7588 -4 26.8799 -3.5205 26.4507 -2.8438 C25.7476 -1.3848 25.8721 0.25 25.9976 1.9102 C25.9238 3.8721 26.1255 5.8613 25.9238 7.8477 C25.9731 8.0205 25.9478 8.25 25.9731 8.4766 C25.9238 10.8906 25.7222 13.0527 25.4956 15.4424 C28.5898 14.7891 L28.8413 13.958 29.2173 13.2568 29.3179 12.376 C29.4194 12.2988 L29.6465 11.2422 29.8228 10.2373 30.0234 9.2061 C29.9976 9.0313 30.0234 8.7275 30.0986 8.5283 C30.0986 7.7969 30.2495 7.293 30.2256 6.5908 C30.2749 5.6318 30.2495 4.627 30.1738 3.5713 C30.3252 3.4443 30.0986 3.3457 30.1235 3.2188 Cf*ULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF
